<!DOCTYPE html>
<html>

<head></head>

<body>SCORE:
<input id="lblScore" type="text"/>
<br/>
TIME:
<input id="lblTime" type="text"/>
<br/>
<canvas id="canvas" height="600" width="600"></canvas>


<script type="text/javascript">
    var context = canvas.getContext("2d");
    var shape = new Object();
    var board;
    var score;
    var pac_color;
    var start_time;
    var time_elapsed;
    var interval;

    Start();

    function Start() {
        board = new Array();
        score = 0;
        pac_color = "yellow";
        var cnt = 100;
        var food_remain = 50;
        var pacman_remain = 1;
        //Init the board: put pacman, obstacles and food
        start_time = new Date();
        for (var i = 0; i < 10; i++) {
            board[i] = new Array();
            //put obstacles in (i=3,j=3) and (i=3,j=4) and (i=3,j=5), (i=6,j=1) and (i=6,j=2)
            for (var j = 0; j < 10; j++) {
                if ((i == 3 && j == 3) || (i == 3 && j == 4) || (i == 3 && j == 5) || (i == 6 && j == 1) || (i == 6 && j == 2)) {
                    board[i][j] = 4;
                }
                // put pacman and food at random places
                else {
                    var randomNum = Math.random();
                    if (randomNum <= 1.0 * food_remain / cnt) {
                        food_remain--;
                        board[i][j] = 1;
                    } else if (randomNum < 1.0 * (pacman_remain + food_remain) / cnt) {
                        shape.i = i;
                        shape.j = j;
                        pacman_remain--;
                        board[i][j] = 2;
                    } else {
                        board[i][j] = 0;
                    }
                    cnt--;
                }
            }
        }
        //Put all remaining food on the board
        while (food_remain > 0) {
            var emptyCell = findRandomEmptyCell(board);
            board[emptyCell[0]][emptyCell[1]] = 1;
            food_remain--;
        }
        //Init listeners to identify keyboard clicks
        keysDown = {};
        addEventListener("keydown", function (e) {
            keysDown[e.keyCode] = true;
        }, false);
        addEventListener("keyup", function (e) {
            keysDown[e.keyCode] = false;
        }, false);
        //Update pacman position on the board every 250ms
        interval = setInterval(UpdatePosition, 250);
    }

    //Find random empty cell on 10x10 board  (the 9 need to be variable)
    function findRandomEmptyCell(board) {
        var i = Math.floor((Math.random() * 9) + 1);
        var j = Math.floor((Math.random() * 9) + 1);
        while (board[i][j] != 0) {
            i = Math.floor((Math.random() * 9) + 1);
            j = Math.floor((Math.random() * 9) + 1);
        }
        return [i, j];
    }

    function GetKeyPressed() {
        //Up arrow
        if (keysDown[38]) {
            return 1;
        }
        //Down arrow
        if (keysDown[40]) {
            return 2;
        }
        //Left arrow
        if (keysDown[37]) {
            return 3;
        }
        //Right arrow
        if (keysDown[39]) {
            return 4;
        }
    }

    //Draw the board(Array) on the canvas
    function Draw() {
        canvas.width = canvas.width; //clean board
        lblScore.value = score; //lbl = label
        lblTime.value = time_elapsed;
        for (var i = 0; i < 10; i++) {
            for (var j = 0; j < 10; j++) {
                var center = new Object();
                center.x = i * 60 + 30;
                center.y = j * 60 + 30;
                if (board[i][j] == 2) {//2 means pacman
                    context.beginPath();
                    context.arc(center.x, center.y, 30, 0.15 * Math.PI, 1.85 * Math.PI); // half circle
                    context.lineTo(center.x, center.y);
                    context.fillStyle = pac_color; //color
                    context.fill();
                    context.beginPath();
                    context.arc(center.x + 5, center.y - 15, 5, 0, 2 * Math.PI); // circle
                    context.fillStyle = "black"; //color
                    context.fill();
                } else if (board[i][j] == 1) {//1 means food
                    context.beginPath();
                    context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                    context.fillStyle = "black"; //color
                    context.fill();
                }
                else if (board[i][j] == 4) { // 4 means obstacle
                    context.beginPath();
                    context.rect(center.x - 30, center.y - 30, 60, 60);
                    context.fillStyle = "grey"; //color
                    context.fill();
                }
            }
        }


    }

    function UpdatePosition() {
        board[shape.i][shape.j] = 0;
        var x = GetKeyPressed()
        if (x == 1) {//Up
            if (shape.j > 0 && board[shape.i][shape.j - 1] != 4) {//Check if not obstacle or out the boarder
                shape.j--;
            }
        }
        if (x == 2) {//Down
            if (shape.j < 9 && board[shape.i][shape.j + 1] != 4) {
                shape.j++;
            }
        }
        if (x == 3) {//Left
            if (shape.i > 0 && board[shape.i - 1][shape.j] != 4) {
                shape.i--;
            }
        }
        if (x == 4) {//Right
            if (shape.i < 9 && board[shape.i + 1][shape.j] != 4) {
                shape.i++;
            }
        }
        if (board[shape.i][shape.j] == 1) { //pacman eat food
            score++;
        }
        board[shape.i][shape.j] = 2; // put pacman
        var currentTime = new Date();
        time_elapsed = (currentTime - start_time) / 1000;
        if (score >= 20 && time_elapsed <= 10) {//Change pacman color to green if you play well
            pac_color = "green";
        }
        if (score == 50) {//game ended
            window.clearInterval(interval);
            window.alert("Game completed");
        }
        else {
            Draw();
        }
    }
</script>
</body>

</html>